---
title: "Coding Assessment 4"
author: "Ben Sunshine"
format: 
  html:
    embed-resources: true
---

```{r}
library(tidyverse)
library(rvest)
url <- "https://en.wikipedia.org/wiki/List_of_Wimbledon_gentlemen%27s_singles_champions"
tennis_tables <- read_html(url) |>
  html_nodes("table")
wimbledon_df <- tennis_tables[[4]] |> html_table() |>
  select(-Country) |>
  rename(year = `Year[d]`,
         runner_up = `Runner-up`,
         champion = Champion) |>
  filter(year >= 2004) |>
  mutate(player1 = if_else(champion > runner_up,
                           true = runner_up,
                           false = champion),
         player2 = if_else(champion > runner_up,
                           true = champion,
                           false = runner_up)) |>
  select(-champion, -runner_up) |>
  filter(player1 != "No competition (due to COVID-19 pandemic)[6]")

wimbledon_df

network_df <-
  wimbledon_df %>%
  rename(vertex1 = player1,
         vertex2 = player2)

network_sum <- network_df |> mutate(player_first = if_else(vertex1 > vertex2,
                                           true = vertex2,
                                           false = vertex1),
                     player_second = if_else(vertex1 > vertex2,
                                            true = vertex1,
                                            false = vertex2)) |>
  dplyr::select(-vertex1, -vertex2) |>
  group_by(player_first, player_second) |>
  summarise(n_game = n()) 
```


```{r}
library(tidygraph)
nodes <- wimbledon_df |> pivot_longer(c(player1, player2),
                             names_to = "player_num",
                             values_to = "player") |>
  distinct(player) |>
  rowid_to_column("id") |>
  rename(label = player) %>%
  mutate(big_three = case_when(
    label == "Roger Federer" ~ "big three",
    label == "Rafael Nadal" ~ "big three",
    label == "Novak Djokovic" ~ "big three",
    .default = "normal"
  ))


```


```{r}
edges <- left_join(network_sum, nodes, by = join_by(player_first == label)) |>
  rename(from = "id") |>
  left_join(nodes, by = join_by(player_second == label)) |>
  rename(to = "id") |>
  ungroup() |>
  dplyr::select(to, from, n_game, big_three.x, big_three.y)

network_obj <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)

```

```{r}
library(ggraph)

ggraph(network_obj) +
  geom_edge_link(aes(width = n_game, alpha = 0.5, show.legend = FALSE)) +
  geom_node_point(aes(colour = as.factor(big_three),
                      size = ), show.legend = TRUE) +
  scale_edge_width(range = c(0.5, 3)) +
  geom_node_text(aes(label = label), repel = TRUE) +
  scale_color_viridis_d(option = "D")
```



